"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _types = require("./types");

var _viewHelpers = require("./view-helpers");

function BooleanFacet(_ref) {
  var className = _ref.className,
      label = _ref.label,
      options = _ref.options,
      onChange = _ref.onChange,
      onRemove = _ref.onRemove,
      values = _ref.values;
  var trueOptions = options.find(function (option) {
    return option.value === "true";
  });
  if (!trueOptions) return null;
  var isSelected = values.includes("true");

  var apply = function apply() {
    return onChange("true");
  };

  var remove = function remove() {
    return onRemove("true");
  };

  var toggle = function toggle() {
    isSelected ? remove() : apply();
  };

  return /*#__PURE__*/_react.default.createElement("fieldset", {
    className: (0, _viewHelpers.appendClassName)("sui-facet", className)
  }, /*#__PURE__*/_react.default.createElement("legend", {
    className: "sui-facet__title"
  }, label), /*#__PURE__*/_react.default.createElement("div", {
    className: "sui-boolean-facet"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "sui-boolean-facet__option-input-wrapper"
  }, /*#__PURE__*/_react.default.createElement("label", {
    className: "sui-boolean-facet__option-label"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "sui-boolean-facet__option-input-wrapper"
  }, /*#__PURE__*/_react.default.createElement("input", {
    className: "sui-boolean-facet__checkbox",
    type: "checkbox",
    onChange: toggle
  }), /*#__PURE__*/_react.default.createElement("span", {
    className: "sui-boolean-facet__input-text"
  }, label)), /*#__PURE__*/_react.default.createElement("span", {
    className: "sui-boolean-facet__option-count"
  }, trueOptions.count)))));
}

BooleanFacet.propTypes = {
  className: _propTypes.default.string,
  label: _propTypes.default.string.isRequired,
  onRemove: _propTypes.default.func.isRequired,
  options: _propTypes.default.arrayOf(_types.FacetValue).isRequired,
  values: _propTypes.default.arrayOf(_types.FilterValue).isRequired,
  onChange: _propTypes.default.func.isRequired
};
var _default = BooleanFacet;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9Cb29sZWFuRmFjZXQuanMiXSwibmFtZXMiOlsiQm9vbGVhbkZhY2V0IiwiY2xhc3NOYW1lIiwibGFiZWwiLCJvcHRpb25zIiwib25DaGFuZ2UiLCJvblJlbW92ZSIsInZhbHVlcyIsInRydWVPcHRpb25zIiwiZmluZCIsIm9wdGlvbiIsInZhbHVlIiwiaXNTZWxlY3RlZCIsImluY2x1ZGVzIiwiYXBwbHkiLCJyZW1vdmUiLCJ0b2dnbGUiLCJjb3VudCIsInByb3BUeXBlcyIsIlByb3BUeXBlcyIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJmdW5jIiwiYXJyYXlPZiIsIkZhY2V0VmFsdWUiLCJGaWx0ZXJWYWx1ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7O0FBQ0E7O0FBRUE7O0FBQ0E7O0FBRUEsU0FBU0EsWUFBVCxPQU9HO0FBQUEsTUFOREMsU0FNQyxRQU5EQSxTQU1DO0FBQUEsTUFMREMsS0FLQyxRQUxEQSxLQUtDO0FBQUEsTUFKREMsT0FJQyxRQUpEQSxPQUlDO0FBQUEsTUFIREMsUUFHQyxRQUhEQSxRQUdDO0FBQUEsTUFGREMsUUFFQyxRQUZEQSxRQUVDO0FBQUEsTUFEREMsTUFDQyxRQUREQSxNQUNDO0FBQ0QsTUFBTUMsV0FBVyxHQUFHSixPQUFPLENBQUNLLElBQVIsQ0FBYSxVQUFBQyxNQUFNO0FBQUEsV0FBSUEsTUFBTSxDQUFDQyxLQUFQLEtBQWlCLE1BQXJCO0FBQUEsR0FBbkIsQ0FBcEI7QUFDQSxNQUFJLENBQUNILFdBQUwsRUFBa0IsT0FBTyxJQUFQO0FBQ2xCLE1BQU1JLFVBQVUsR0FBR0wsTUFBTSxDQUFDTSxRQUFQLENBQWdCLE1BQWhCLENBQW5COztBQUVBLE1BQU1DLEtBQUssR0FBRyxTQUFSQSxLQUFRO0FBQUEsV0FBTVQsUUFBUSxDQUFDLE1BQUQsQ0FBZDtBQUFBLEdBQWQ7O0FBQ0EsTUFBTVUsTUFBTSxHQUFHLFNBQVRBLE1BQVM7QUFBQSxXQUFNVCxRQUFRLENBQUMsTUFBRCxDQUFkO0FBQUEsR0FBZjs7QUFDQSxNQUFNVSxNQUFNLEdBQUcsU0FBVEEsTUFBUyxHQUFNO0FBQ25CSixJQUFBQSxVQUFVLEdBQUdHLE1BQU0sRUFBVCxHQUFjRCxLQUFLLEVBQTdCO0FBQ0QsR0FGRDs7QUFJQSxzQkFDRTtBQUFVLElBQUEsU0FBUyxFQUFFLGtDQUFnQixXQUFoQixFQUE2QlosU0FBN0I7QUFBckIsa0JBQ0U7QUFBUSxJQUFBLFNBQVMsRUFBQztBQUFsQixLQUFzQ0MsS0FBdEMsQ0FERixlQUVFO0FBQUssSUFBQSxTQUFTLEVBQUM7QUFBZixrQkFDRTtBQUFLLElBQUEsU0FBUyxFQUFFO0FBQWhCLGtCQUNFO0FBQU8sSUFBQSxTQUFTLEVBQUM7QUFBakIsa0JBQ0U7QUFBSyxJQUFBLFNBQVMsRUFBQztBQUFmLGtCQUNFO0FBQ0UsSUFBQSxTQUFTLEVBQUMsNkJBRFo7QUFFRSxJQUFBLElBQUksRUFBQyxVQUZQO0FBR0UsSUFBQSxRQUFRLEVBQUVhO0FBSFosSUFERixlQU1FO0FBQU0sSUFBQSxTQUFTLEVBQUM7QUFBaEIsS0FBaURiLEtBQWpELENBTkYsQ0FERixlQVNFO0FBQU0sSUFBQSxTQUFTLEVBQUM7QUFBaEIsS0FDR0ssV0FBVyxDQUFDUyxLQURmLENBVEYsQ0FERixDQURGLENBRkYsQ0FERjtBQXNCRDs7QUFFRGhCLFlBQVksQ0FBQ2lCLFNBQWIsR0FBeUI7QUFDdkJoQixFQUFBQSxTQUFTLEVBQUVpQixtQkFBVUMsTUFERTtBQUV2QmpCLEVBQUFBLEtBQUssRUFBRWdCLG1CQUFVQyxNQUFWLENBQWlCQyxVQUZEO0FBR3ZCZixFQUFBQSxRQUFRLEVBQUVhLG1CQUFVRyxJQUFWLENBQWVELFVBSEY7QUFJdkJqQixFQUFBQSxPQUFPLEVBQUVlLG1CQUFVSSxPQUFWLENBQWtCQyxpQkFBbEIsRUFBOEJILFVBSmhCO0FBS3ZCZCxFQUFBQSxNQUFNLEVBQUVZLG1CQUFVSSxPQUFWLENBQWtCRSxrQkFBbEIsRUFBK0JKLFVBTGhCO0FBTXZCaEIsRUFBQUEsUUFBUSxFQUFFYyxtQkFBVUcsSUFBVixDQUFlRDtBQU5GLENBQXpCO2VBU2VwQixZIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFByb3BUeXBlcyBmcm9tIFwicHJvcC10eXBlc1wiO1xuaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuXG5pbXBvcnQgeyBGYWNldFZhbHVlLCBGaWx0ZXJWYWx1ZSB9IGZyb20gXCIuL3R5cGVzXCI7XG5pbXBvcnQgeyBhcHBlbmRDbGFzc05hbWUgfSBmcm9tIFwiLi92aWV3LWhlbHBlcnNcIjtcblxuZnVuY3Rpb24gQm9vbGVhbkZhY2V0KHtcbiAgY2xhc3NOYW1lLFxuICBsYWJlbCxcbiAgb3B0aW9ucyxcbiAgb25DaGFuZ2UsXG4gIG9uUmVtb3ZlLFxuICB2YWx1ZXNcbn0pIHtcbiAgY29uc3QgdHJ1ZU9wdGlvbnMgPSBvcHRpb25zLmZpbmQob3B0aW9uID0+IG9wdGlvbi52YWx1ZSA9PT0gXCJ0cnVlXCIpO1xuICBpZiAoIXRydWVPcHRpb25zKSByZXR1cm4gbnVsbDtcbiAgY29uc3QgaXNTZWxlY3RlZCA9IHZhbHVlcy5pbmNsdWRlcyhcInRydWVcIik7XG5cbiAgY29uc3QgYXBwbHkgPSAoKSA9PiBvbkNoYW5nZShcInRydWVcIik7XG4gIGNvbnN0IHJlbW92ZSA9ICgpID0+IG9uUmVtb3ZlKFwidHJ1ZVwiKTtcbiAgY29uc3QgdG9nZ2xlID0gKCkgPT4ge1xuICAgIGlzU2VsZWN0ZWQgPyByZW1vdmUoKSA6IGFwcGx5KCk7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8ZmllbGRzZXQgY2xhc3NOYW1lPXthcHBlbmRDbGFzc05hbWUoXCJzdWktZmFjZXRcIiwgY2xhc3NOYW1lKX0+XG4gICAgICA8bGVnZW5kIGNsYXNzTmFtZT1cInN1aS1mYWNldF9fdGl0bGVcIj57bGFiZWx9PC9sZWdlbmQ+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInN1aS1ib29sZWFuLWZhY2V0XCI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPXtcInN1aS1ib29sZWFuLWZhY2V0X19vcHRpb24taW5wdXQtd3JhcHBlclwifT5cbiAgICAgICAgICA8bGFiZWwgY2xhc3NOYW1lPVwic3VpLWJvb2xlYW4tZmFjZXRfX29wdGlvbi1sYWJlbFwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzdWktYm9vbGVhbi1mYWNldF9fb3B0aW9uLWlucHV0LXdyYXBwZXJcIj5cbiAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic3VpLWJvb2xlYW4tZmFjZXRfX2NoZWNrYm94XCJcbiAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgIG9uQ2hhbmdlPXt0b2dnbGV9XG4gICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInN1aS1ib29sZWFuLWZhY2V0X19pbnB1dC10ZXh0XCI+e2xhYmVsfTwvc3Bhbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic3VpLWJvb2xlYW4tZmFjZXRfX29wdGlvbi1jb3VudFwiPlxuICAgICAgICAgICAgICB7dHJ1ZU9wdGlvbnMuY291bnR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICA8L2ZpZWxkc2V0PlxuICApO1xufVxuXG5Cb29sZWFuRmFjZXQucHJvcFR5cGVzID0ge1xuICBjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIGxhYmVsOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gIG9uUmVtb3ZlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBvcHRpb25zOiBQcm9wVHlwZXMuYXJyYXlPZihGYWNldFZhbHVlKS5pc1JlcXVpcmVkLFxuICB2YWx1ZXM6IFByb3BUeXBlcy5hcnJheU9mKEZpbHRlclZhbHVlKS5pc1JlcXVpcmVkLFxuICBvbkNoYW5nZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQm9vbGVhbkZhY2V0O1xuIl19