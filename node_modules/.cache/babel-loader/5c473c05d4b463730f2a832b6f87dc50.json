{"ast":null,"code":"import _defineProperty from \"/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\n\nvar _getConfig = getConfig(),\n    hostIdentifier = _getConfig.hostIdentifier,\n    searchKey = _getConfig.searchKey,\n    endpointBase = _getConfig.endpointBase,\n    engineName = _getConfig.engineName;\n\nvar connector = new AppSearchAPIConnector({\n  searchKey: searchKey,\n  engineName: engineName,\n  hostIdentifier: hostIdentifier,\n  endpointBase: endpointBase\n});\nvar config = {\n  searchQuery: _objectSpread({\n    facets: buildFacetConfigFromConfig()\n  }, buildSearchOptionsFromConfig()),\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nvar card = function card(result) {\n  console.log(result.nombres);\n  return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"result.nombres\");\n};\n\nexport default function App() {\n  return React.createElement(SearchProvider, {\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref) {\n      var wasSearched = _ref.wasSearched,\n          setSearchTerm = _ref.setSearchTerm,\n          results = _ref.results;\n      return {\n        wasSearched: wasSearched,\n        setSearchTerm: setSearchTerm,\n        results: results\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, function (_ref2) {\n    var wasSearched = _ref2.wasSearched,\n        setSearchTerm = _ref2.setSearchTerm,\n        results = _ref2.results;\n    console.log(results);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ErrorBoundary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Layout, {\n      header: React.createElement(SearchBox, {\n        autocompleteSuggestions: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      sideContent: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, wasSearched && React.createElement(Sorting, {\n        label: \"Sort by\",\n        sortOptions: buildSortOptionsFromConfig(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), getFacetFields().map(function (field) {\n        //console.log(field);  \n        // left sidebar cat names\n        return React.createElement(Facet, {\n          key: field,\n          field: field,\n          label: field,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      })),\n      bodyContent: card(results),\n      bodyHeader: React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, wasSearched && React.createElement(PagingInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), wasSearched && React.createElement(ResultsPerPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })),\n      bodyFooter: React.createElement(Paging, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })));\n  }));\n}","map":{"version":3,"sources":["/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/src/App.js"],"names":["React","AppSearchAPIConnector","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","Layout","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","hostIdentifier","searchKey","endpointBase","engineName","connector","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","card","result","console","log","nombres","App","wasSearched","setSearchTerm","results","map","field"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n\nimport {\n  ErrorBoundary,\n  Facet,\n  SearchProvider,\n  SearchBox,\n  Results,\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Sorting,\n  WithSearch\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport {\n  buildAutocompleteQueryConfig,\n  buildFacetConfigFromConfig,\n  buildSearchOptionsFromConfig,\n  buildSortOptionsFromConfig,\n  getConfig,\n  getFacetFields\n} from \"./config/config-helper\";\n\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nconst card = (result)=>{\n  console.log(result.nombres);\n  return (\n    <p>result.nombres</p>\n  )\n}\n\nexport default function App() {\n  return (\n    <SearchProvider config={config}>\n      <WithSearch mapContextToProps={({ wasSearched,setSearchTerm,results }) => ({ wasSearched,setSearchTerm,results })}>\n        {({ wasSearched,setSearchTerm,results }) => {\n          console.log(results);\n          return (\n            <div className=\"App\">\n              <ErrorBoundary>\n                <Layout\n                  header={<SearchBox autocompleteSuggestions={true} />}\n                  sideContent={\n                    <div>\n                      {wasSearched && (\n                        <Sorting\n                          label={\"Sort by\"}\n                          sortOptions={buildSortOptionsFromConfig()}\n                        />\n                      )}\n                      {getFacetFields().map(field => {\n                        //console.log(field);  \n                        // left sidebar cat names\n                        return(\n                          <Facet key={field} field={field} label={field} />\n                        )\n                      })}\n                    </div>\n                  }\n                  bodyContent={\n                    card(results)                   \n                  }\n                  bodyHeader={\n                    <React.Fragment>\n                      {wasSearched && <PagingInfo />}\n                      {wasSearched && <ResultsPerPage />}\n                    </React.Fragment>\n                  }\n                  bodyFooter={<Paging />}\n                />\n              </ErrorBoundary>\n            </div>\n          );\n        }}\n      </WithSearch>\n    </SearchProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}