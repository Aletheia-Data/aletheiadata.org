{"ast":null,"code":"import { removeSingleFilterValue } from \"../helpers\";\n/**\n * Remove filter from results\n *\n * Will trigger new search\n *\n * @param name String field name for filter to remove\n * @param value String (Optional) field value for filter to remove\n * @param type String (Optional) type of filter to remove\n */\n\nexport default function removeFilter(name, value, type) {\n  var _console;\n\n  if (this.debug) // eslint-disable-next-line no-console\n    (_console = console).log.apply(_console, [\"Search UI: Action\", \"removeFilter\"].concat(Array.prototype.slice.call(arguments)));\n  var filters = this.state.filters;\n  var updatedFilters = filters;\n\n  if (!value && type) {\n    updatedFilters = filters.filter(function (filter) {\n      return !(filter.field === name && filter.type === type);\n    });\n  } else if (value) {\n    updatedFilters = removeSingleFilterValue(filters, name, value, type);\n  } else {\n    updatedFilters = filters.filter(function (filter) {\n      return filter.field !== name;\n    });\n  }\n\n  this._updateSearchResults({\n    current: 1,\n    filters: updatedFilters\n  });\n}","map":null,"metadata":{},"sourceType":"module"}