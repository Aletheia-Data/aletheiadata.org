{"ast":null,"code":"import _defineProperty from \"/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport { ErrorBoundary, Facet, SearchProvider, SearchBox, Results, PagingInfo, ResultsPerPage, Paging, Sorting, WithSearch } from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\nimport { buildAutocompleteQueryConfig, buildFacetConfigFromConfig, buildSearchOptionsFromConfig, buildSortOptionsFromConfig, getConfig, getFacetFields } from \"./config/config-helper\";\n\nvar _getConfig = getConfig(),\n    hostIdentifier = _getConfig.hostIdentifier,\n    searchKey = _getConfig.searchKey,\n    endpointBase = _getConfig.endpointBase,\n    engineName = _getConfig.engineName;\n\nvar connector = new AppSearchAPIConnector({\n  searchKey: searchKey,\n  engineName: engineName,\n  hostIdentifier: hostIdentifier,\n  endpointBase: endpointBase\n});\nvar config = {\n  searchQuery: _objectSpread({\n    facets: buildFacetConfigFromConfig()\n  }, buildSearchOptionsFromConfig()),\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\nexport default function App() {\n  return React.createElement(SearchProvider, {\n    config: config,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(WithSearch, {\n    mapContextToProps: function mapContextToProps(_ref) {\n      var searchTerm = _ref.searchTerm,\n          setSearchTerm = _ref.setSearchTerm,\n          results = _ref.results;\n      return {\n        searchTerm: searchTerm,\n        setSearchTerm: setSearchTerm,\n        results: results\n      };\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (_ref2) {\n    var searchTerm = _ref2.searchTerm,\n        setSearchTerm = _ref2.setSearchTerm,\n        results = _ref2.results;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: searchTerm,\n      onChange: function onChange(e) {\n        return setSearchTerm(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), results.map(function (r) {\n      return React.createElement(\"div\", {\n        key: r.id.raw,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, r.nombres.raw, \" \", r.apellisdos.raw);\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/enzojuniorvezzaro/GITHUB/aletheiadata.org/src/App.js"],"names":["React","AppSearchAPIConnector","ErrorBoundary","Facet","SearchProvider","SearchBox","Results","PagingInfo","ResultsPerPage","Paging","Sorting","WithSearch","Layout","buildAutocompleteQueryConfig","buildFacetConfigFromConfig","buildSearchOptionsFromConfig","buildSortOptionsFromConfig","getConfig","getFacetFields","hostIdentifier","searchKey","endpointBase","engineName","connector","config","searchQuery","facets","autocompleteQuery","apiConnector","alwaysSearchOnInitialLoad","App","searchTerm","setSearchTerm","results","e","target","value","map","r","id","raw","nombres","apellisdos"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,qBAAP,MAAkC,yCAAlC;AAEA,SACEC,aADF,EAEEC,KAFF,EAGEC,cAHF,EAIEC,SAJF,EAKEC,OALF,EAMEC,UANF,EAOEC,cAPF,EAQEC,MARF,EASEC,OATF,EAUEC,UAVF,QAWO,0BAXP;AAYA,SAASC,MAAT,QAAuB,gCAAvB;AACA,OAAO,sDAAP;AAEA,SACEC,4BADF,EAEEC,0BAFF,EAGEC,4BAHF,EAIEC,0BAJF,EAKEC,SALF,EAMEC,cANF,QAOO,wBAPP;;iBASgED,SAAS,E;IAAjEE,c,cAAAA,c;IAAgBC,S,cAAAA,S;IAAWC,Y,cAAAA,Y;IAAcC,U,cAAAA,U;;AACjD,IAAMC,SAAS,GAAG,IAAItB,qBAAJ,CAA0B;AAC1CmB,EAAAA,SAAS,EAATA,SAD0C;AAE1CE,EAAAA,UAAU,EAAVA,UAF0C;AAG1CH,EAAAA,cAAc,EAAdA,cAH0C;AAI1CE,EAAAA,YAAY,EAAZA;AAJ0C,CAA1B,CAAlB;AAMA,IAAMG,MAAM,GAAG;AACbC,EAAAA,WAAW;AACTC,IAAAA,MAAM,EAAEZ,0BAA0B;AADzB,KAENC,4BAA4B,EAFtB,CADE;AAKbY,EAAAA,iBAAiB,EAAEd,4BAA4B,EALlC;AAMbe,EAAAA,YAAY,EAAEL,SAND;AAObM,EAAAA,yBAAyB,EAAE;AAPd,CAAf;AAUA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF,oBAAC,UAAD;AACE,IAAA,iBAAiB,EAAE;AAAA,UAAGO,UAAH,QAAGA,UAAH;AAAA,UAAeC,aAAf,QAAeA,aAAf;AAAA,UAA8BC,OAA9B,QAA8BA,OAA9B;AAAA,aAA6C;AAC9DF,QAAAA,UAAU,EAAVA,UAD8D;AAE9DC,QAAAA,aAAa,EAAbA,aAF8D;AAG9DC,QAAAA,OAAO,EAAPA;AAH8D,OAA7C;AAAA,KADrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,iBAA4C;AAAA,QAAzCF,UAAyC,SAAzCA,UAAyC;AAAA,QAA7BC,aAA6B,SAA7BA,aAA6B;AAAA,QAAdC,OAAc,SAAdA,OAAc;AAC3C,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,KAAK,EAAEF,UADT;AAEE,MAAA,QAAQ,EAAE,kBAAAG,CAAC;AAAA,eAAIF,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjB;AAAA,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKGH,OAAO,CAACI,GAAR,CAAY,UAAAC,CAAC;AAAA,aACZ;AAAK,QAAA,GAAG,EAAEA,CAAC,CAACC,EAAF,CAAKC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBF,CAAC,CAACG,OAAF,CAAUD,GAA/B,OAAqCF,CAAC,CAACI,UAAF,CAAaF,GAAlD,CADY;AAAA,KAAb,CALH,CADF;AAWD,GAnBH,CADE,CADF;AAyBD","sourcesContent":["import React from \"react\";\n\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\n\nimport {\n  ErrorBoundary,\n  Facet,\n  SearchProvider,\n  SearchBox,\n  Results,\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Sorting,\n  WithSearch\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nimport {\n  buildAutocompleteQueryConfig,\n  buildFacetConfigFromConfig,\n  buildSearchOptionsFromConfig,\n  buildSortOptionsFromConfig,\n  getConfig,\n  getFacetFields\n} from \"./config/config-helper\";\n\nconst { hostIdentifier, searchKey, endpointBase, engineName } = getConfig();\nconst connector = new AppSearchAPIConnector({\n  searchKey,\n  engineName,\n  hostIdentifier,\n  endpointBase\n});\nconst config = {\n  searchQuery: {\n    facets: buildFacetConfigFromConfig(),\n    ...buildSearchOptionsFromConfig()\n  },\n  autocompleteQuery: buildAutocompleteQueryConfig(),\n  apiConnector: connector,\n  alwaysSearchOnInitialLoad: true\n};\n\nexport default function App() {\n  return (\n    <SearchProvider config={config}>\n  <WithSearch\n    mapContextToProps={({ searchTerm, setSearchTerm, results }) => ({\n      searchTerm,\n      setSearchTerm,\n      results\n    })}\n  >\n    {({ searchTerm, setSearchTerm, results }) => {\n      return (\n        <div>\n          <input\n            value={searchTerm}\n            onChange={e => setSearchTerm(e.target.value)}\n          />\n          {results.map(r => (\n            <div key={r.id.raw}>{r.nombres.raw} {r.apellisdos.raw}</div>\n          ))}\n        </div>\n      );\n    }}\n  </WithSearch>\n</SearchProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}