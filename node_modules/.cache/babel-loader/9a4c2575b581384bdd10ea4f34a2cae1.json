{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nexport default function buildResponseAdapterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var additionalFacetValueFields = Object.entries(config.facets || {}).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        fieldName = _ref2[0],\n        facetConfig = _ref2[1];\n\n    if (facetConfig.unit && facetConfig.center) {\n      return _objectSpread({}, acc || {}, _defineProperty({}, fieldName, _objectSpread({}, facetConfig.unit && {\n        unit: facetConfig.unit\n      }, {}, facetConfig.center && {\n        center: facetConfig.center\n      })));\n    }\n\n    return acc;\n  }, null);\n  return _objectSpread({}, additionalFacetValueFields && {\n    additionalFacetValueFields: additionalFacetValueFields\n  });\n}","map":null,"metadata":{},"sourceType":"module"}