{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction wireUpEventHandler(handlerName, apiConnector, handlerParam) {\n  if (handlerParam) {\n    // Passes a 'next' parameter which allows a handler to work as\n    // middleware for a connector\n    if (apiConnector) {\n      var next = apiConnector[handlerName].bind(apiConnector);\n      return function () {\n        for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n          params[_key] = arguments[_key];\n        }\n\n        return handlerParam.apply(void 0, params.concat([next]));\n      };\n    }\n\n    return handlerParam;\n  }\n\n  if (apiConnector && apiConnector[handlerName]) return apiConnector[handlerName].bind(apiConnector);\n  return function () {\n    throw \"No \".concat(handlerName, \" handler provided and no Connector provided. You must configure one or the other.\");\n  };\n}\n/*\n * This class encapsulates the logic for Events. Events are events that occur\n * within Search UI that require integration with an external service to\n * either fetch / search for data, or notify analytics services of interesting\n * events that occur within a UI.\n *\n * Handlers for these events can either be passed directly, or by providing\n * an API Connector. The events that are passed directly can also be used\n * to override or proxy handlers provided by API Connectors.\n */\n\n\nvar Events = function Events() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      apiConnector = _ref.apiConnector,\n      onSearch = _ref.onSearch,\n      onAutocomplete = _ref.onAutocomplete,\n      onResultClick = _ref.onResultClick,\n      onAutocompleteResultClick = _ref.onAutocompleteResultClick;\n\n  _classCallCheck(this, Events);\n\n  this.search = wireUpEventHandler(\"onSearch\", apiConnector, onSearch);\n  this.autocomplete = wireUpEventHandler(\"onAutocomplete\", apiConnector, onAutocomplete);\n  this.resultClick = wireUpEventHandler(\"onResultClick\", apiConnector, onResultClick);\n  this.autocompleteResultClick = wireUpEventHandler(\"onAutocompleteResultClick\", apiConnector, onAutocompleteResultClick);\n};\n\nexport { Events as default };","map":null,"metadata":{},"sourceType":"module"}