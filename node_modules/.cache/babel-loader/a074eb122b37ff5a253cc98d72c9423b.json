{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Result } from \"./types\";\nimport { Suggestion } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nfunction getSnippet(result, value) {\n  if (!result[value] || !result[value].snippet) return;\n  return result[value].snippet;\n}\n\nfunction getSuggestionTitle(suggestionType, autocompleteSuggestions) {\n  if (autocompleteSuggestions.sectionTitle) {\n    return autocompleteSuggestions.sectionTitle;\n  }\n\n  if (autocompleteSuggestions[suggestionType] && autocompleteSuggestions[suggestionType].sectionTitle) {\n    return autocompleteSuggestions[suggestionType].sectionTitle;\n  }\n}\n\nfunction Autocomplete(_ref) {\n  var autocompleteResults = _ref.autocompleteResults,\n      autocompletedResults = _ref.autocompletedResults,\n      autocompleteSuggestions = _ref.autocompleteSuggestions,\n      autocompletedSuggestions = _ref.autocompletedSuggestions,\n      className = _ref.className,\n      getItemProps = _ref.getItemProps,\n      getMenuProps = _ref.getMenuProps;\n  var index = 0;\n  return (\n    /*#__PURE__*/\n    React.createElement(\"div\", getMenuProps({\n      className: appendClassName(\"sui-search-box__autocomplete-container\", className)\n    }),\n    /*#__PURE__*/\n    React.createElement(\"div\", null, !!autocompleteSuggestions && Object.entries(autocompletedSuggestions).map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          suggestionType = _ref3[0],\n          suggestions = _ref3[1];\n\n      return (\n        /*#__PURE__*/\n        React.createElement(React.Fragment, {\n          key: suggestionType\n        }, getSuggestionTitle(suggestionType, autocompleteSuggestions) && suggestions.length > 0 &&\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"sui-search-box__section-title\"\n        }, getSuggestionTitle(suggestionType, autocompleteSuggestions)), suggestions.length > 0 &&\n        /*#__PURE__*/\n        React.createElement(\"ul\", {\n          className: \"sui-search-box__suggestion-list\"\n        }, suggestions.map(function (suggestion) {\n          index++;\n          return (\n            /*#__PURE__*/\n            // eslint-disable-next-line react/jsx-key\n            React.createElement(\"li\", getItemProps({\n              key: suggestion.suggestion || suggestion.highlight,\n              index: index - 1,\n              item: suggestion\n            }), suggestion.highlight ?\n            /*#__PURE__*/\n            React.createElement(\"span\", {\n              dangerouslySetInnerHTML: {\n                __html: suggestion.highlight\n              }\n            }) :\n            /*#__PURE__*/\n            React.createElement(\"span\", null, suggestion.suggestion))\n          );\n        })))\n      );\n    }), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 && autocompleteResults.sectionTitle &&\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"sui-search-box__section-title\"\n    }, autocompleteResults.sectionTitle), !!autocompleteResults && !!autocompletedResults && autocompletedResults.length > 0 &&\n    /*#__PURE__*/\n    React.createElement(\"ul\", {\n      className: \"sui-search-box__results-list\"\n    }, autocompletedResults.map(function (result) {\n      index++;\n      var titleSnippet = getSnippet(result, autocompleteResults.titleField);\n      var titleRaw = getRaw(result, autocompleteResults.titleField);\n      return (\n        /*#__PURE__*/\n        // eslint-disable-next-line react/jsx-key\n        React.createElement(\"li\", getItemProps({\n          key: result.id.raw,\n          index: index - 1,\n          item: result\n        }), titleSnippet ?\n        /*#__PURE__*/\n        React.createElement(\"span\", {\n          dangerouslySetInnerHTML: {\n            __html: titleSnippet\n          }\n        }) :\n        /*#__PURE__*/\n        React.createElement(\"span\", null, titleRaw))\n      );\n    }))))\n  );\n}\n\nAutocomplete.propTypes = {\n  allAutocompletedItemsCount: PropTypes.number.isRequired,\n  autocompleteResults: PropTypes.oneOfType([PropTypes.bool, PropTypes.shape({\n    titleField: PropTypes.string.isRequired,\n    urlField: PropTypes.string.isRequired,\n    linkTarget: PropTypes.string,\n    sectionTitle: PropTypes.string\n  })]),\n  autocompletedResults: PropTypes.arrayOf(Result).isRequired,\n  autocompletedSuggestions: PropTypes.objectOf(PropTypes.arrayOf(Suggestion)).isRequired,\n  autocompletedSuggestionsCount: PropTypes.number.isRequired,\n  autocompleteSuggestions: PropTypes.oneOfType([PropTypes.bool, PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }), PropTypes.objectOf(PropTypes.exact({\n    sectionTitle: PropTypes.string\n  }))]),\n  getItemProps: PropTypes.func.isRequired,\n  getMenuProps: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\nexport default Autocomplete;","map":null,"metadata":{},"sourceType":"module"}