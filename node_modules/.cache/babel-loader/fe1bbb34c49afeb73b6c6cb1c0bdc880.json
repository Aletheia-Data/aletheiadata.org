{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { Result, Results } from \"@elastic/react-search-ui-views\";\nimport { withSearch } from \"..\";\nimport { Result as ResultContainer } from \".\";\nimport { Result as ResultType } from \"../types\";\n\nfunction getRaw(result, value) {\n  if (!result[value] || !result[value].raw) return;\n  return result[value].raw;\n}\n\nexport var ResultsContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ResultsContainer, _Component);\n\n  var _super = _createSuper(ResultsContainer);\n\n  function ResultsContainer() {\n    _classCallCheck(this, ResultsContainer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ResultsContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          className = _this$props.className,\n          clickThroughTags = _this$props.clickThroughTags,\n          resultView = _this$props.resultView,\n          results = _this$props.results,\n          shouldTrackClickThrough = _this$props.shouldTrackClickThrough,\n          titleField = _this$props.titleField,\n          urlField = _this$props.urlField,\n          view = _this$props.view,\n          rest = _objectWithoutProperties(_this$props, [\"className\", \"clickThroughTags\", \"resultView\", \"results\", \"shouldTrackClickThrough\", \"titleField\", \"urlField\", \"view\"]);\n\n      var View = view || Results;\n      var ResultView = resultView || Result;\n      return View(_objectSpread({\n        className: className,\n        children: results.map(function (result) {\n          return (\n            /*#__PURE__*/\n            React.createElement(ResultContainer, {\n              key: \"result-\".concat(getRaw(result, \"id\")),\n              titleField: titleField,\n              urlField: urlField,\n              view: ResultView,\n              result: result,\n              shouldTrackClickThrough: shouldTrackClickThrough,\n              clickThroughTags: clickThroughTags\n            })\n          );\n        })\n      }, rest));\n    }\n  }]);\n\n  return ResultsContainer;\n}(Component);\n\n_defineProperty(ResultsContainer, \"propTypes\", {\n  // Props\n  className: PropTypes.string,\n  clickThroughTags: PropTypes.arrayOf(PropTypes.string),\n  resultView: PropTypes.func,\n  titleField: PropTypes.string,\n  urlField: PropTypes.string,\n  view: PropTypes.func,\n  shouldTrackClickThrough: PropTypes.bool,\n  // State\n  results: PropTypes.arrayOf(ResultType).isRequired\n});\n\n_defineProperty(ResultsContainer, \"defaultProps\", {\n  clickThroughTags: [],\n  shouldTrackClickThrough: true\n});\n\nexport default withSearch(function (_ref) {\n  var results = _ref.results;\n  return {\n    results: results\n  };\n})(ResultsContainer);","map":null,"metadata":{},"sourceType":"module"}