{"ast":null,"code":"/**\n * This helper creates a live region that announces the results of certain\n * actions (e.g. searching, paging, etc.), that are otherwise invisible\n * to screen reader users.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions\n */\nvar regionId = \"search-ui-screen-reader-notifications\";\nvar hasDOM = typeof document !== \"undefined\"; // Prevent errors in SSR apps\n\nvar getLiveRegion = function getLiveRegion() {\n  if (!hasDOM) return;\n  var region = document.getElementById(regionId);\n  if (region) return region;\n  region = document.createElement(\"div\");\n  region.id = regionId;\n  region.setAttribute(\"role\", \"status\");\n  region.setAttribute(\"aria-live\", \"polite\");\n  /**\n   * Visually-hidden CSS that's still available to screen readers.\n   * We're avoiding putting this in a stylesheet to ensure that this\n   * still works for users that opt for custom views & CSS. We're\n   * also opting to use CSSOM instead of inline styles to avoid\n   * Content Security Policy warnings.\n   *\n   * @see https://accessibility.18f.gov/hidden-content/\n   */\n\n  region.style.position = \"absolute\";\n  region.style.width = \"1px\";\n  region.style.height = \"1px\";\n  region.style.margin = \"-1px\";\n  region.style.padding = \"0\";\n  region.style.border = \"0\";\n  region.style.overflow = \"hidden\";\n  region.style.clip = \"rect(0 0 0 0)\";\n  document.body.appendChild(region);\n  return region;\n};\n\nvar announceToScreenReader = function announceToScreenReader(announcement) {\n  if (hasDOM) {\n    var region = getLiveRegion();\n    region.textContent = announcement;\n  }\n};\n\nvar defaultMessages = {\n  searchResults: function searchResults(_ref) {\n    var start = _ref.start,\n        end = _ref.end,\n        totalResults = _ref.totalResults,\n        searchTerm = _ref.searchTerm;\n    var message = \"Showing \".concat(start, \" to \").concat(end, \" results out of \").concat(totalResults);\n    if (searchTerm) message += \", searching for \\\"\".concat(searchTerm, \"\\\".\");\n    return message;\n  }\n};\nexport { getLiveRegion, announceToScreenReader, defaultMessages };","map":null,"metadata":{},"sourceType":"module"}