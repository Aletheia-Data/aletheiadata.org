{"ast":null,"code":"import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { FacetValue, FilterValue } from \"./types\";\nimport { appendClassName } from \"./view-helpers\";\n\nfunction BooleanFacet(_ref) {\n  var className = _ref.className,\n      label = _ref.label,\n      options = _ref.options,\n      onChange = _ref.onChange,\n      onRemove = _ref.onRemove,\n      values = _ref.values;\n  var trueOptions = options.find(function (option) {\n    return option.value === \"true\";\n  });\n  if (!trueOptions) return null;\n  var isSelected = values.includes(\"true\");\n\n  var apply = function apply() {\n    return onChange(\"true\");\n  };\n\n  var remove = function remove() {\n    return onRemove(\"true\");\n  };\n\n  var toggle = function toggle() {\n    isSelected ? remove() : apply();\n  };\n\n  return (\n    /*#__PURE__*/\n    React.createElement(\"fieldset\", {\n      className: appendClassName(\"sui-facet\", className)\n    },\n    /*#__PURE__*/\n    React.createElement(\"legend\", {\n      className: \"sui-facet__title\"\n    }, label),\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"sui-boolean-facet\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"sui-boolean-facet__option-input-wrapper\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"label\", {\n      className: \"sui-boolean-facet__option-label\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"div\", {\n      className: \"sui-boolean-facet__option-input-wrapper\"\n    },\n    /*#__PURE__*/\n    React.createElement(\"input\", {\n      className: \"sui-boolean-facet__checkbox\",\n      type: \"checkbox\",\n      onChange: toggle\n    }),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"sui-boolean-facet__input-text\"\n    }, label)),\n    /*#__PURE__*/\n    React.createElement(\"span\", {\n      className: \"sui-boolean-facet__option-count\"\n    }, trueOptions.count)))))\n  );\n}\n\nBooleanFacet.propTypes = {\n  className: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(FacetValue).isRequired,\n  values: PropTypes.arrayOf(FilterValue).isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default BooleanFacet;","map":null,"metadata":{},"sourceType":"module"}